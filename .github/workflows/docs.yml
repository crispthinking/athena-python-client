name: Documentation
on:
  push:
    branches:
      - main
    paths:
      - "docs/**"
      - "src/**"
      - "pyproject.toml"
      - ".github/workflows/docs.yml"

# Sets permissions of the GITHUB_TOKEN
permissions:
  contents: write
  pull-requests: write

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --dev --groups docs

      - name: Configure Git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Build documentation
        run: |
          cd docs
          make clean
          make html

      - name: Prepare docs branch
        run: |
          # Create/switch to docs branch
          git checkout -B docs

          # Remove existing docs if any
          rm -rf docs/build || true

          # Move built docs to root docs/build directory
          mkdir -p docs/build
          cp -r docs/_build/html/* docs/build/

          # Stage changes
          git add docs/build

          # Only proceed if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to documentation"
            exit 0
          fi

          # Commit changes
          git commit -m "Update documentation from main branch"

          # Push to docs branch
          git push origin docs --force

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check if PR already exists
          PR_EXISTS=$(gh pr list --head docs --base main --json number -q length)

          if [ "$PR_EXISTS" -eq "0" ]; then
            # Create PR if it doesn't exist
            gh pr create \
              --base main \
              --head docs \
              --title "Documentation Update" \
              --body "Automated documentation update from main branch.

              This PR was automatically generated by the documentation workflow when changes were detected in the docs, source code, or project configuration." \
              --label "documentation"
          else
            echo "PR from docs branch already exists. Skipping PR creation."
          fi
